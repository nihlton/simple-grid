@import 'variables.scss';


html, body {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html * {
  box-sizing: inherit;
  &:before, &:after {
    box-sizing: inherit;
  }
}

.container {
  padding: 1.5rem;
  margin: 0 auto;
  max-width: 100%;
  width: 62rem
}

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  margin: 0;
  padding: 0;
}

.row > * {
  flex-grow: 0;
  flex-shrink: 0;
  flex: 1;
  padding: #{$cell-padding};
}

.row > *.no-cell-padding {
  padding: 0;
}

.row > hr {
  margin: .5rem;
  flex-basis: 100%;
  padding: 0;
  margin-top: -.5px;
  margin-bottom: -.5px;
  border-style: solid;
}

.row > hr.vertical {
  margin: .5rem;
  flex-basis: 0;
  height: auto;
  border-width: 0 1px 0 0;
  max-width: 0;
  margin-left: -.5px;
  margin-right: -.5px;
}

.row > hr.touching.vertical {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

@media (max-width: #{map-get($breaks, medium)}) {
  .container { padding: 1.5rem; }
  .show-for-medium { display: none !important; }
  .show-for-large { display: none !important; }
  .hide-for-small { display: none !important; }
}

@media (min-width: #{map-get($breaks, medium)}) and (max-width: #{map-get($breaks, large)}) {
  .container { padding: 1.5rem; }
  .show-for-small { display: none !important; }
  .show-for-large { display: none !important; }
  .hide-for-medium { display: none !important; }
}

@media (min-width: #{map-get($breaks, large)}) {
  .container { padding: 2rem; }
  .show-for-small { display: none !important; }
  .show-for-medium { display: none !important; }
  .hide-for-large { display: none !important; }
}

@each $sName, $sValue in $breaks {
  @media (min-width:  #{$sValue}) {
    @for $i from 1 through 12 { .order-#{$sName}-#{$i} { order: #{ $i }; }}
    .row {
      margin: 0 calc( -1 * #{map-get($gutters, medium)});

      &> *, &> .row {margin: #{map-get($gutters, medium)};}
      &> .row:not(.no-row-padding) { padding: #{map-get($gutters, medium)}; }
      .no-row-padding { margin: calc( -1 * (#{map-get($gutters, medium)} + #{$cell-padding})); }
      @for $i from 1 through 12 {
        &> .#{$sName}-#{$i} {
          flex-basis: calc(  #{( $i / 12 )*100 + '%'} - ( #{map-get($gutters, medium)} * 2));
          max-width: calc( #{( $i / 12 )*100 + '%'} - ( #{map-get($gutters, medium)} * 2));
        }
      }
      @for $i from 1 through 12 {
        &> .#{$sName}-#{$i}.no-row-padding {
          margin: calc(( -1 * ( #{$cell-padding} )) );
          flex-basis:  calc( #{( $i / 12 )*100 + '%'} + calc( #{$cell-padding} * 2));
          max-width: calc( #{( $i / 12 )*100 + '%'} + calc( #{$cell-padding} * 2) );
        }
      }
      @for $i from 1 through 12 {
        &> .offset-#{$sName}-#{$i - 1} { margin-left:  calc((( #{$i - 1} / 12 )*100%) + #{map-get($gutters, medium)} ) !important; }
      }
    }
    @each $gName, $gValue in $gutters {
      .row.#{$gName}-gutter {
        @if $gName != 'medium' {
          margin: 0 calc( -1 * #{$gValue});

          &> hr { margin: #{$gValue}; margin-top: -.5px; margin-bottom: -.5px;}
          &> hr.vertical { margin: #{$gValue}; margin-left: -.5px; margin-right: -.5px;}
          &> *, &> .row {margin: #{$gValue};}
          &> .row:not(.no-row-padding) {padding: #{gValue}; }
          .no-row-padding { margin: calc( -1 * (#{$gValue} + #{$cell-padding})); }
          @for $i from 1 through 12 {
            &> .#{$sName}-#{$i} {
              flex-basis: calc( #{($i/12)*100 + '%'} - ( #{$gValue} * 2));
              max-width: calc( #{($i/12)*100 + '%'} - ( #{$gValue} * 2));
            }
          }
          @for $i from 1 through 12 {
            &> .#{$sName}-#{$i}.no-row-padding {
              margin: calc(( -1 * (#{$cell-padding})) );
              flex-basis: calc( #{($i/12)*100 + '%'} + ( #{$cell-padding} * 2) );
              max-width: calc( #{($i/12)*100 + '%'} + ( #{$cell-padding} * 2) );
            }
          }
          @for $i from 1 through 12 {
            &> .offset-#{$sName}-#{$i - 1} { margin-left:  calc((( #{$i - 1} / 12 )*100%) + #{$gValue} ) !important;; }
          }
        }
      }
    }
  }
}
